import type { NextPage } from "next";
import Head from "next/head";
import Counter from "../features/counter/counter";
import styles from "../styles/Home.module.css";
import {
  usePostsQuery,
  usePostQuery,
  useAddPostMutation,
  useUpdatePostMutation,
  useDeletePostMutation
} from "../services/api";

const Home: NextPage = () => {
  let { data, error, isLoading, isFetching, isSuccess } = usePostsQuery();
  let L: number =data ? data?.length : 0 ;
  data = data ? data.slice(L-10,L).reverse() : [];
  return (
    <div className={styles.container}>
      <Head>
        <title>Pilot Project for Iran Top Talent</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>Welcome to my project!</h1>
        {isLoading && <h3> is loading ... </h3>}
        {isFetching && <h3> is fetching ... </h3>}
        {error && <h3> something went wrong </h3>}
        {isSuccess && (
          <div>
            <EditPost />
            {/* <Counter /> */}
            <h2 style={{ textAlign: "center", padding: "4px" }}>post list:</h2>
            {data?.map((post) => {
              return (
                <div
                  style={{
                    textAlign: "left",
                    width: "50vw",
                    margin: "auto",
                    padding: "2px",
                  }}
                  key={post.id}
                >
                  <h5> title: {post.title} </h5>
                  <div>
                    <PostDetail id={post.id} />
                  </div>
                </div>
              );
            })}
          </div>
        )}
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
};

export const PostDetail = ({ id }: { id: number }) => {
  const { data } = usePostQuery(id);
  return <pre> {JSON.stringify(data, undefined, 1)} </pre>;
};

export const EditPost = () => {
  const [addPost] = useAddPostMutation();
  const [updatePost] = useUpdatePostMutation();
  const [deletePost] = useDeletePostMutation();

  const post = {
    userId: 10,
    // id: Math.floor(Math.random() * 100) + 101,
    id: 100,
    title: "HELLO",
    body: "how are you",
  };

  const updatedPost = {
    userId: 10,
    // id: Math.floor(Math.random() * 100) + 101,
    id: 100,
    title: "HELLO 2",
    body: "how are you 2",
  };


  const addHandler = async () => {
    await addPost(post);
  };

  const updateHandler = async () => {
    await updatePost(updatedPost);
  };

  const deleteHandler = async () => {
    await deletePost(post.id);
  };

  return (
    <div style={{ display:'flex' , gap: "8px"}}>
      <button onClick={addHandler}> add new post </button>
      <button onClick={updateHandler}> update post </button>
      <button onClick={deleteHandler}> delete post </button>
    </div>
  );
};

export default Home;
